# **************************************************************************** #
#                                    Colors                                    #
# **************************************************************************** #

C_STD = \033[0;39m
C_GRAY = \033[0;90m
C_RED = \033[0;91m
C_GREEN = \033[0;92m
C_YELLOW = \033[0;93m
C_BLUE = \033[0;94m
C_MAGENTA = \033[0;95m
C_CYAN = \033[0;96m
C_WHITE = \033[0;97m

# **************************************************************************** #
#                                    Names                                     #
# **************************************************************************** #

EXEC		= push_swap
ARQUIVE		= binary.a
LIBFT		= $(LIBFT_PATH)libft.a

# **************************************************************************** #
#                                    Git                                       #
# **************************************************************************** #

LIBFT_URL	= https://github.com/Denionline/Libft.git

# **************************************************************************** #
#                                    Path's                                    #
# **************************************************************************** #

INC			= include
LIBFT_PATH	= $(INC)/libft/

FILES		+= main
FILES		+= push_swap
FILES		+= sn
FILES		+= ss
FILES		+= pn
FILES		+= rn
FILES		+= rr
FILES		+= rrn
FILES		+= rrr
FILES		+= calc_moves
FILES		+= rotates
FILES		+= better_array

SRC_FILES	= $(addprefix ./, $(FILES))
SRCS		= $(addprefix ./, $(addsuffix .c, $(SRC_FILES)))
OBJS		= $(addprefix ./, $(addsuffix .o, $(SRC_FILES)))

# **************************************************************************** #
#                                  Compiler                                    #
# **************************************************************************** #

CC			= cc
CFLAGS		= -Wall -Werror -Wextra
AR			= ar rcs
MAKE		= make --no-print-directory

# **************************************************************************** #
#                                    Tests                                     #
# **************************************************************************** #

TEST1		
TEST2		
TEST3		
TEST4		
TEST5		= "125 334 398 111 218 440 484 341 50 298 124 381 63 400 264 189 460 31 137 120 23 261 266 40 367 387 319 172 221 91 257 131 309 252 211 457 477 483 454 449 424 200 173 222 67 248 140 435 404 493 186 223 332 135 438 16 219 338 33 179 241 325 8 470 410 431 154 107 74 370 337 472 324 417 340 262 5 90 212 357 413 369 246 226 121 296 240 188 474 155 386 441 274 158 265 141 235 497 150 482 405 233 374 402 382 432 455 347 393 58 464 373 289 391 3 6 207 117 425 269 73 317 399 243 26 302 326 468 312 348 500 491 152 480 82 354 142 56 89 133 342 238 260 350 94 465 453 216 169 383 345 39 277 7 251 255 199 426 256 395 100 359 9 396 17 422 59 64 178 267 96 78 379 70 273 122 101 463 336 415 481 86 45 270 38 228 60 21 103 414 239 167 366 308 461 55 394 294 148 168 316 442 278 272 201 54 275 130 377 191 27 43 57 147 20 284 4 297 315 170 204 378 146 459 127 471 104 185 46 362 295 19 485 427 487 418 495 313 83 25 112 447 198 416 163 138 36 380 343 105 42 92 389 81 114 106 71 205 195 320 331 247 156 283 136 299 13 139 68 230 129 160 234 181 35 61 102 118 356 196 339 184 486 430 473 456 237 358 300 407 37 10 281 144 85 292 419 476 496 329 190 327 145 22 303 165 244 462 288 490 280 166 176 72 157 116 66 276 392 375 499 421 202 406 30 1 433 360 210 401 194 428 475 88 14 29 48 446 450 282 328 151 489 291 242 458 285 208 397 306 310 408 115 203 69 28 363 443 279 220 322 77 467 143 372 231 41 62 109 333 123 290 65 113 249 93 301 119 174 412 429 352 436 34 445 258 215 305 15 76 388 250 108 149 488 287 95 183 353 75 323 371 18 97 403 466 434 182 80 164 232 159 214 47 53 437 344 52 478 498 365 307 376 192 236 126 171 384 321 79 361 423 409 177 224 227 229 494 175 134 187 110 263 213 132 225 217 355 44 162 245 12 452 469 49 390 259 385 335 153 2 318 11 51 451 180 420 193 209 32 206 311 84 197 286 268 98 349 87 411 304 254 330 253 346 99 479 314 24 448 444 128 492 439 271 161 293 351 368 364"

# **************************************************************************** #
#                                    Comands                                   #
# **************************************************************************** #

all: verify $(LIBFT) $(ARQUIVE)
	@echo "✅ Tudo está atualizado!"

$(LIBFT):
	@$(MAKE) -C $(LIBFT_PATH)

$(ARQUIVE): $(OBJS) $(LIBFT)
	@$(AR) $(ARQUIVE) $(OBJS)
	@$(CC) $(CFLAGS) $(ARQUIVE) $(LIBFT) -o $(EXEC)
	@printf "\n$(C_GREEN)Success to created the executable $(C_STD)$(EXEC)\n\n"

%.o: %.c
	@$(CC) $(CFLAGS) -I $(INC) -c $< -o $@
	@printf "Compiling $(C_YELLOW)$<$(C_STD)...\n"

test:
	@numbers=$(TEST1) ./test.sh
	@numbers=$(TEST2) ./test.sh
	@numbers=$(TEST3) ./test.sh
	@numbers=$(TEST4) ./test.sh
	@numbers=$(TEST5) ./test.sh

help:
	@printf "\n$(C_MAGENTA)MAKE TYPES$(C_STD)\n\n"
	@printf "[$(C_GREEN)pr$(C_STD)] = Print the sorted array;\n"
	@printf "[$(C_GREEN)cop$(C_STD)] = Show the amount of each operation.\n\n"

verify:
	@if test ! -d "$(LIBFT_PATH)"; then $(MAKE) get_libft; \
		else printf "\n$(C_GREEN)Libft folder exist!$(C_STD)\n\n"; fi
	@$(MAKE) update_modules

update_modules:
	@printf "$(C_BLUE)Updating repository...$(C_STD)\n"
# @git submodule init
# @git submodule update --recursive --remote
	@printf "$(C_BLUE)Repository updated!$(C_STD)\n\n"

get_libft:
	@echo "Cloning Libft"
	@git clone $(LIBFT_URL) $(LIBFT_PATH)
	@echo "Libft clone successfully downloaded"

clean:
	@rm -rf $(OBJS)

fclean: clean
	@rm -rf $(ARQUIVE) $(EXEC)

re: fclean all
